[1]ディレクトリ構成

test
 |
 |-------- in テストケース(.in)を置いておくフォルダ
 |
 |-------- out 正答(.out)を置いておくフォルダ
 |
 |-------- lib テストケース生成を補助するライブラリ
 |
 |-------- gen テストケース生成コードを置くフォルダ, 生成コードを自分で書く
 |
 |-------- src checker.py(テスト実行用), input_generator.py(入力ファイル生成用), output_generator.py(正答ファイル生成用)


 自分でコードを書くのはgenのファイルのみ
 自分でコードを実行するのはsrcのファイルのみ

[2] 使い方
--------------------------------------------------------------------------------
(1) checker.py

使い方
$python3 checker.py aaa.cpp
$python3 checker.py aaa.py

.pyファイル, .cppファイルでない場合エラー

動作
in/xxx.in, in/xxx2.in...を入力としてaaaを実行する
inフォルダ内のin拡張子ファイル全てに対してコードを実行,  out/xxx.outが存在するなら正答かどうかの判定を返す

判定
多くの問題はいずれかのパターンに該当する
1. 解が一意に定まる
2. 解は一意に定まるが, 計算誤差により正確に求める/答えることが不可能(例: 円周率)
3. 条件を満たす回答が複数あり, どれを答えてもOK
4. インタラクティブ

3, 4は問題に合わせて独自の判定関数を作る必要があるためこのライブラリでは未対応

--------------------------------------------------------------------------------
(2) input_generator.py

使い方
$python3 input_generator.py

入力(標準入力)
n (ケースの種類数)
xxx(ケース名) yyy(実行する回数)
xxx2...     yyy2
...

動作
gen/xxx, gen/xxx2...を実行してin/xxx.in, in/xxx2.in...を生成する
xxxは.cppまたは.pyで終わる
--------------------------------------------------------------------------------
(3) output_generator.py

使い方
$python3 output_generator.py aaa.cpp
$python3 output_generator.py aaa.py

.pyファイル, .cppファイルでない場合エラー

動作
in/xxx.in, in/xxx2.in...を入力としてaaaを実行する
inフォルダ内のin拡張子ファイル全てに対して行われる
out/xxx.outを生成する

--------------------------------------------------------------------------------
[3] 生成コードの例


--------------------------------------------------------------------------------
[4] 生成補助ライブラリの説明
